<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="performance">

	<select id="performanceSeq" resultType="Integer">
		SELECT performance_seq.NEXTVAL FROM dual
	</select>
	
	<select id="scheduleSeq" resultType="Integer">
		SELECT schedule_seq.NEXTVAL FROM dual
	</select>
	
	<!-- 공연 등록 -->
	<insert id="insertPerformance" parameterType="com.sp.tp.performance.Performance">
		INSERT INTO performance (perfNum, subject, content, gmnum, tnum, rnum, rating, price, time, startDate, endDate)
			VALUES (#{perfNum}, #{subject}, #{content}, #{genreNum}, #{theaterNum},#{rateNum}, #{rating}, #{price}, #{showTime}, #{startDate}, #{endDate})
	</insert>
	
	<insert id="insertSchedule" parameterType="com.sp.tp.performance.Performance">
		INSERT INTO schedule (sdNum,perf_time, perf_date, perfNum)
			VALUES (#{sdNum}, #{perfTime}, #{perfDate}, #{perfNum})
	</insert>
	 
	<insert id="insertCast" parameterType="com.sp.tp.performance.Performance">
		INSERT INTO cast (castNum, sdNum, name, roleName, imageFileName)
			VALUES(cast_seq.NEXTVAL, #{sdNum}, #{castName}, #{roleName}, #{castFileName})
	</insert>
	
	<sql id="category-list">
		<if test="category == 'musical'">
			c.cNum = 1
		</if>
		<if test="category == 'drama'">
			c.cNum = 2
		</if>
		<if test="category == 'concert'">
			c.cNum = 3
		</if>
		<if test="category=='all'">
			c.cNum IS NOT NULL
		</if>
	</sql>
	
	<sql id="category-list-genre">
		<if test="category == 'musical'">
			cNum = 1
		</if>
		<if test="category == 'drama'">
			cNum = 2
		</if>
		<if test="category == 'concert'">
			cNum = 3
		</if>
		<if test="category=='all'">
			cNum IS NOT NULL
		</if>
	</sql>
	
	<!-- 공연 개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM (
		    SELECT DISTINCT p.perfNum, subject, po.saveFilename postFileName, g.genre,
		        TO_CHAR(startDate, 'YYYY-MM-DD') startDate, 
		        TO_CHAR(endDate, 'YYYY-MM-DD') endDate, h.addr, h.hallName
		    FROM performance p, genre g, category c, poster po, schedule s, hall h
		    WHERE g.gnum=p.gmnum AND c.cnum=g.cnum
		        AND p.perfNum = po.perfNum AND poster_main = 1 AND p.perfNum=s.perfNum2
		        AND h.hNum=s.hNum
			<if test="category != null and category != ''">
	            AND <include refid="category-list"/>
	        </if>
			
			<if test=" keyDate!=null and keyDate!=''">
				AND 
				#{keyDate} &gt;= startDate AND #{keyDate} &lt;= endDate
			</if>	
			<if test=" keyGenre!=null and keyGenre!=''">
				AND g.gnum = #{keyGenre}
			</if>
			<if test=" keyAddr!=null and keyAddr!='' ">
				AND INSTR(addr, #{keyAddr}) &gt; 0
			</if>
		)
	</select>
	
	<!-- 공연리스트 -->
	<select id="listPerformance" parameterType="map" resultType="com.sp.tp.performance.Performance">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        SELECT DISTINCT p.perfNum, subject, po.saveFilename postFileName, g.genre,
		            TO_CHAR(startDate, 'YYYY-MM-DD') startDate, 
		            TO_CHAR(endDate, 'YYYY-MM-DD') endDate, h.addr, h.hallName
		        FROM performance p, genre g, category c, poster po, schedule s, hall h
		        WHERE g.gnum=p.gmnum AND c.cnum=g.cnum
		            AND p.perfNum = po.perfNum AND poster_main = 1 AND p.perfNum=s.perfNum2
		            AND h.hNum=s.hNum
						<if test="category != null and category != ''">
							AND <include refid="category-list"/>
						</if>
						
						<if test=" keyDate!=null and keyDate!=''">
							AND 
							#{keyDate} &gt;= startDate AND #{keyDate} &lt;= endDate
						</if>	
						<if test=" keyGenre!=null and keyGenre!=''">
							AND g.gnum = #{keyGenre}
						</if>
						<if test=" keyAddr!=null and keyAddr!='' ">
							AND INSTR(addr, #{keyAddr}) &gt; 0
						</if>
        		ORDER BY perfNum DESC
			)  tb WHERE ROWNUM &lt;= #{end}
	    ) WHERE rnum &gt;= #{start}
	</select>
	
	<!-- 파일 -->
	<insert id="insertPoster" parameterType="com.sp.tp.performance.Performance">
		INSERT INTO poster(postNum, perfNum, saveFilename, poster_main) 
			VALUES (poster_seq.NEXTVAL, #{perfNum}, #{postFileName}, 1)
	</insert>
	
	<select id="listPoster" parameterType="Integer" resultType="com.sp.tp.performance.Performance">
		SELECT postNum, perfNum, saveFilename postFileName
		FROM poster
		WHERE perfNum = #{perfNum} AND poster_main = 1
	</select>
	
	<!-- 카테고리 -->
	<select id="listCategory" resultType="com.sp.tp.performance.Performance">
		SELECT cNum categoryNum, category
		FROM category
	</select>
	
	<select id="listGenre" parameterType="map" resultType="com.sp.tp.performance.Performance">
		SELECT gNum genreNum, genre
		FROM genre
		<where>
			<include refid="category-list-genre"/>
		</where>
	</select>
	
	<select id="listGenreMain" parameterType="map" resultType="com.sp.tp.performance.Performance">
		SELECT gNum genreNum, genre, cNum categoryNum
		FROM genre
	</select>
	
	<select id="listRate" parameterType="Integer" resultType="com.sp.tp.performance.Performance">
		SELECT rNum rateNum, rate
		FROM rate
	</select>
	
	<select id="listHall" resultType="com.sp.tp.performance.Performance">
		SELECT hNum hallNum, hallName
		FROM hall
	</select>
	
	<select id="listTheater" parameterType="Integer" resultType="com.sp.tp.performance.Performance">
		SELECT tNum theaterNum, Name theater
		FROM theater
		WHERE hallNo = #{hallNum}
	</select>
	
	<select id="readPerformance" parameterType="Integer" resultType="com.sp.tp.performance.Performance">
	    SELECT p.perfNum, subject, po.saveFilename postFileName,
	        TO_CHAR(startDate, 'YYYY-MM-DD') startDate, TO_CHAR(endDate, 'YYYY-MM-DD') endDate, 
	        genre, category, time showTime, price, rate, p.content, rating
	    FROM performance p, genre g, poster po, category c, rate r
	    WHERE p.gmnum = g.gnum AND c.cNum = g.cNum
	        AND r.rNum = p.rNum
	        AND p.perfNum = po.perfNum AND poster_main = 1 
	        AND p.perfNum = ${perfNum}
	</select>
	
	<select id="listFile" parameterType="Integer" resultType="com.sp.tp.performance.Performance">
		SELECT postNum, perfNum, saveFileName FROM poster
		WHERE poster_main = 1 AND perfNum = #{perfNum}
	</select>
	
	<!-- 공연 날짜 -->
	<select id="listSchedule" parameterType="Integer" resultType="com.sp.tp.performance.PerformanceBook">
		SELECT TO_CHAR((TO_DATE(perf_date,'YYYY-MM-DD')),'YYYY-MM-DD') perf_date
		FROM schedule s
        JOIN performance p ON s.perfNum2 = p.perfNum
		WHERE s.perfNum2 = #{perfNum} AND perf_date &gt;= SYSDATE
	</select>
	
	<!-- 공연 시간 -->
	<select id="listTime" parameterType="map" resultType="com.sp.tp.performance.PerformanceBook">
		select p.ptNum, performanceTime perfTime, LISTAGG(name,',') WITHIN GROUP(ORDER BY name) AS actorName 
		from performanceTime p
		JOIN schedule s ON p.perf_date = s.perf_date
		JOIN performance pf ON pf.perfNum = s.perfNum2
		JOIN cast c ON p.ptNum = c.ptNum
		JOIN actor a ON a.actorNum = c.actorNum
		where p.perf_date = #{perf_date}
		GROUP BY performanceTime, p.ptNum
	</select>
</mapper>