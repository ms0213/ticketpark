<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sch">
	<insert id="insertSchedule" parameterType="com.sp.tp.sch.Schedule">
		INSERT INTO calendar(num, userId, subject, categoryNum, color, sday, eday,
					stime, etime, repeat, repeat_cycle, memo, reg_date) 
				VALUES(calendar_seq.NEXTVAL, #{userId}, #{subject},
					#{categoryNum, jdbcType=INTEGER}, 
					#{color}, #{sday},
					#{eday, jdbcType=VARCHAR},
					#{stime, jdbcType=VARCHAR},
					#{etime, jdbcType=VARCHAR},
					#{repeat}, #{repeat_cycle},
					#{memo, jdbcType=VARCHAR},
					SYSDATE
		)
	</insert>
	
	<select id="listMonth" parameterType="map" resultType="com.sp.tp.sch.Schedule">
		SELECT num id, subject title, sday, eday, stime, etime,
				c.categoryNum, category, color, repeat, repeat_cycle, memo, reg_date
		FROM calendar c
		LEFT OUTER JOIN calendarCategory cc ON c.categoryNum = cc.categoryNum
		<where>
			<if test="categoryList != null">
				c.categoryNum IN
				<foreach collection="categoryList" item="categoryNum" open="(" separator="," close=")">
					#{categoryNum}
				</foreach>
				
				AND 
			</if>

			( 
				( 
					 ( TO_DATE(sday, 'YYYY-MM-DD') &gt;= TO_DATE(#{start}, 'YYYY-MM-DD')
						AND TO_DATE(sday, 'YYYY-MM-DD') &lt;= TO_DATE(#{end}, 'YYYY-MM-DD')
					 ) OR ( TO_DATE(eday, 'YYYY-MM-DD') &lt;= TO_DATE(#{start}, 'YYYY-MM-DD') 
					     AND TO_DATE(eday, 'YYYY-MM-DD') &lt;= TO_DATE(#{end}, 'YYYY-MM-DD')
					 )
				) OR (
					repeat=1 AND repeat_cycle!=0
						AND ADD_MONTHS(TO_DATE(sday, 'YYYY-MM-DD'), 12 * repeat_cycle*TRUNC(((SUBSTR(#{start},1,4)-SUBSTR(sday,1,4))/repeat_cycle))) &gt;= TO_DATE(#{start}, 'YYYY-MM-DD')
						AND ADD_MONTHS(TO_DATE(sday, 'YYYY-MM-DD'), 12 * repeat_cycle*TRUNC(((SUBSTR(#{start},1,4)-SUBSTR(sday,1,4))/repeat_cycle))) &lt;= TO_DATE(#{end}, 'YYYY-MM-DD')
			  )
			)
		</where>
		ORDER BY sday ASC, id DESC 
	</select>

	<select id="readSchedule" parameterType="Integer" resultType="com.sp.tp.sch.Schedule">
		SELECT num, subject, sday, eday, stime, etime, c.categoryNum, category,
			color, repeat, repeat_cycle, memo, reg_date 
		FROM calendar c
		LEFT OUTER JOIN calendarCategory cc ON c.categoryNum = cc.categoryNum
		WHERE num = #{num}
	</select>
	
	<update id="updateSchedule" parameterType="com.sp.tp.sch.Schedule">
		UPDATE calendar SET
			subject=#{subject},
			categoryNum=#{categoryNum, jdbcType=INTEGER}, 
			color=#{color}, sday=#{sday}, 
			eday=#{eday, jdbcType=VARCHAR},
			stime=#{stime, jdbcType=VARCHAR},
			etime=#{etime, jdbcType=VARCHAR},
			repeat=#{repeat},
			repeat_cycle=#{repeat_cycle},
			memo=#{memo, jdbcType=VARCHAR}
		WHERE num=#{num} AND userId=#{userId}
	</update>
	
	<delete id="deleteSchedule" parameterType="map">
		DELETE FROM calendar WHERE num=#{num} AND userId=#{userId}
	</delete>
	
	<insert id="insertCategory" parameterType="map">
		INSERT INTO calendarCategory(categoryNum, category, userId)
			VALUES(calendarCategory_seq.NEXTVAL, #{category}, #{userId})
	</insert>
	
	<select id="listCategory" parameterType="map" resultType="com.sp.tp.sch.Schedule">
		SELECT categoryNum, category
		FROM calendarCategory
		WHERE userId=#{userId}
		ORDER BY categoryNum
	</select>
	
	<delete id="deleteCategory" parameterType="map">
		DELETE FROM calendarCategory WHERE categoryNum=#{categoryNum} AND userId=#{userId}
	</delete>	
</mapper>