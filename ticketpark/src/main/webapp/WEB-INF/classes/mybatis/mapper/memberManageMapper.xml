<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberManage">
	<!-- 회원 리스트 -->
	<sql id="where-list">
		<choose>
			<when test="condition=='userId'">
				INSTR(m1.userId, #{keyword}) &gt;= 1
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt;= 1
			</otherwise>
		</choose>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*)
		FROM member m
		JOIN member1 m1 ON m.userId = m1.userId
		LEFT OUTER JOIN member2 m2 ON m1.userId = m2.userId
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="enable!=''">
				AND enable = #{enable}
			</if>
			
		</where> 
    </select>
    
	<select id="listMember" parameterType="map" resultType="com.sp.tp.admin.memberManage.Member">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT m1.userId, userName, 
					m1.reg_date, m1.modify_date,
					enable, email, tel, 
					TO_CHAR(birth, 'YYYY-MM-DD') birth
				FROM member m
				JOIN member1 m1 ON m.userId = m1.userId
				LEFT OUTER JOIN member2 m2 ON m1.userId = m2.userId
				<where>
					<if test="keyword!=null and keyword!='' ">
						<include refid="where-list"/>
					</if>
					<if test="enable!=''">
						AND enable = #{enable}
					</if>
					
				</where> 
				ORDER BY reg_date DESC
			) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>

	<select id="readMember" parameterType="String" resultType="com.sp.tp.admin.memberManage.Member">
		SELECT membership, m1.userId, userName, pwd, enable,
			reg_date, modify_date, 
			TO_CHAR(birth, 'YYYY-MM-DD') birth, email, tel, 
			zip, addr1, addr2
		FROM member m
		JOIN member1 m1 ON m.userId = m1.userId
		LEFT OUTER JOIN member2 m2 ON m1.userId = m2.userId
		WHERE m1.userId = #{userId}
	</select>

    <update id="updateMemberEnabled" parameterType="map">
		UPDATE member1 SET enable=#{enable} WHERE userId=#{userId}
    </update>
    
	<insert id="insertMemberState" parameterType="com.sp.tp.admin.memberManage.Member">
		INSERT INTO memberstate(num, userId, stateCode, memo, registerId, register_date)
		VALUES (memberstate_seq.NEXTVAL, #{userId}, #{stateCode}, #{memo}, #{registerId}, SYSDATE)
	</insert>
	
	<select id="listMemberState" parameterType="String" resultType="com.sp.tp.admin.memberManage.Member">
		SELECT num, userId, stateCode, memo, registerId, register_date
		FROM memberstate
		WHERE userId = #{userId}
		ORDER BY num DESC
	</select>

	<select id="readMemberState" parameterType="String" resultType="com.sp.tp.admin.memberManage.Member">
		SELECT * FROM (
			SELECT num, userId, stateCode, memo, registerId, register_date
			FROM memberstate
			WHERE userId = #{userId}
			ORDER BY num DESC
		) WHERE ROWNUM = 1
	</select>

	<!-- 챠트 쿼리 -->
	<select id="listAgeSection" resultType="com.sp.tp.admin.memberManage.Analysis">
		WITH memberAge AS (
		    SELECT m2.userId, TRUNC(MONTHS_BETWEEN(SYSDATE, birth)/12) age
		    FROM member m
		    JOIN member1 m1 ON m.userId = m1.userId
		    JOIN member2 m2 ON m1.userId = m2.userId
			WHERE m1.enable = 1
		)
<![CDATA[ 
		SELECT '10대' section, COUNT(*) count FROM memberAge WHERE age >=10 AND age < 20
		UNION ALL
		SELECT '20대' section, COUNT(*) count FROM memberAge WHERE age >=20 AND age < 30
		UNION ALL
		SELECT '30대' section, COUNT(*) count FROM memberAge WHERE age >=30 AND age < 40
		UNION ALL
		SELECT '40대' section, COUNT(*) count FROM memberAge WHERE age >=40 AND age < 50
		UNION ALL
		SELECT '50대' section, COUNT(*) count FROM memberAge WHERE age >=50 AND age < 60
		UNION ALL
		SELECT '60대' section, COUNT(*) count FROM memberAge WHERE age >=60 AND age < 70
		UNION ALL
		SELECT '기타' section, COUNT(*) count FROM memberAge WHERE age < 10 OR age > 70
]]>	
	</select>
	
</mapper>