<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="performanceManage">

	<select id="seq" resultType="Integer">
		SELECT performance_seq.NEXTVAL FROM dual
	</select>
	
	<select id="ptSeq" resultType="Integer">
		SELECT performanceTime_seq.NEXTVAL FROM dual
	</select>
	
	<select id="actorSeq" resultType="Integer">
		SELECT actor_seq.NEXTVAL FROM dual
	</select>

	<sql id="where-list">
		<if test="condition=='subject'">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='date'">
			startDate &lt;= #{keyword} AND #{keyword} &lt;= endDate
		</if>
		<if test="condition=='hall'">
			INSTR(hallName, #{keyword}) &gt; 0
		</if>
	</sql>
	
	<sql id="category-list">
		<if test="category == 'musical'">
			cNum = 1
		</if>
		<if test="category == 'drama'">
			cNum = 2
		</if>
		<if test="category == 'concert'">
			cNum = 3
		</if>
		<if test="category == ''">
			cNum IS NOT NULL
		</if>
	</sql>

	<!-- 공연 개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM performance p, genre g, category c, theater t, hall h
		WHERE p.gmNum = g.gNum AND c.cNum = g.cNum AND p.tNum = t.tNum AND t.hallNo = h.hNum
		<if test="category != null">
            AND c.<include refid="category-list"/>
        </if>
		<if test="keyword!=null and keyword!='' ">
			AND <include refid="where-list"/>
		</if>	
	</select>
	
	<!-- 공연리스트 -->
	<select id="listPerformance" parameterType="map" resultType="com.sp.tp.admin.performanceManage.PerformanceManage">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        SELECT p.perfNum, subject, po.saveFilename postFileName, category,
		            TO_CHAR(startDate, 'YYYY-MM-DD') startDate, th.name theater, 
		            TO_CHAR(endDate, 'YYYY-MM-DD') endDate, hallName, rate, rating
		        FROM performance p, theater th, hall h, genre g, poster po, rate r, category c
		        WHERE p.tnum = th.tnum AND th.hallno = h.hnum AND p.gmnum = g.gnum AND c.cNum = g.cNum
		            AND p.perfNum = po.perfNum AND r.rNum = p.rNum AND poster_main = 1 
		           	<if test="keyword != null and keyword != ''">
						AND <include refid="where-list"/>	
					</if>
					<if test="category != ''">
						AND c.<include refid="category-list"/>
		            </if>
	        	ORDER BY perfNum DESC
			)  tb WHERE ROWNUM &lt;= #{end}
	    ) WHERE rnum &gt;= #{start}
	</select>
	
	<!-- 공연 등록 -->
	<insert id="insertPerformance" parameterType="com.sp.tp.admin.performanceManage.PerformanceManage">
		INSERT INTO performance (perfNum, subject, content, gmnum, tnum, rnum, rating, price, time, startDate, endDate)
			VALUES (#{perfNum}, #{subject}, #{content}, #{genreNum}, #{theaterNum},#{rateNum}, #{rating}, #{price}, #{showTime}, #{startDate}, #{endDate})
	</insert>
	
	<!-- 공연날짜등록 -->
	<insert id="insertperfDate" parameterType="com.sp.tp.admin.performanceManage.PerformanceManage">
		INSERT INTO schedule (perf_date, perfNum2)
		VALUES (#{perfDate}, #{perfNum})
	</insert>
	
	<!-- 공연시간등록 -->
	<insert id="insertperfTime" parameterType="com.sp.tp.admin.performanceManage.PerformanceManage">
		INSERT INTO performanceTime (ptNum, performanceTime, perf_Date, perfNum2)
		VALUES (#{ptNum}, #{perfTime}, #{perfDate}, #{perfNum})
	</insert>
	
	<!-- 출연진 등록 -->
	<insert id="insertCast" parameterType="com.sp.tp.admin.performanceManage.PerformanceManage">
		INSERT INTO cast (castNum, actorNum, ptNum)
		VALUES (cast_seq.NEXTVAL, #{actorNum}, #{ptNum})
	</insert>
	
	<!-- 파일 -->
	<insert id="insertPoster" parameterType="com.sp.tp.admin.performanceManage.PerformanceManage">
		INSERT INTO poster(postNum, perfNum, saveFilename, poster_main) 
			VALUES (poster_seq.NEXTVAL, #{perfNum}, #{postFileName}, 1)
	</insert>
	
	<!-- 출연진 등록 -->
	<insert id="insertActor" parameterType="com.sp.tp.admin.performanceManage.PerformanceManage">
		INSERT INTO actor(actorNum, perfNum, name, roleName, imageFileName)
			VALUES (#{actorNum}, #{perfNum}, #{actorName}, #{roleName}, #{actorFileName})
	</insert>
	
	<!-- 공연 정보 -->
	<select id="readPerformance" parameterType="Integer" resultType="com.sp.tp.admin.performanceManage.PerformanceManage">
		 SELECT p.perfNum, subject, po.saveFilename postFileName, rating, price,  r.rnum rateNum, g.gnum genreNum,
	        TO_CHAR(startDate, 'YYYY-MM-DD') startDate, TO_CHAR(endDate, 'YYYY-MM-DD') endDate, hNum hallNum, p.time showTime,
	        hallName, genre, category, time, rate, th.name as theater, p.content, actorName, c.cNum categoryNum, th.tnum theaterNum
	    FROM performance p, theater th, hall h, genre g, poster po, category c, rate r, 
            (SELECT p.perfNum, LISTAGG(a.name,',') WITHIN GROUP(ORDER BY a.name) AS actorName
            FROM performance p, actor a
            WHERE a.perfNum = p.perfNum AND p.perfNum = #{perfNum}
            GROUP BY p.perfNum) actor
	    WHERE p.tnum = th.tnum AND th.hallno = h.hnum AND p.gmnum = g.gnum AND c.cNum = g.cNum AND p.perfNum = actor.perfNum(+)
	        AND r.rNum = p.rNum AND p.perfNum = po.perfNum AND poster_main = 1 AND p.perfNum = #{perfNum}
	</select>
	
	<!-- 공연 날짜 -->
	<select id="listSchedule" parameterType="Integer" resultType="com.sp.tp.admin.performanceManage.PerformanceManage">
		SELECT TO_CHAR((TO_DATE(perf_date,'YYYY-MM-DD')),'YYYY"년 "MM"월" DD"일" DAY') perfDateDay, perf_date perfDate
		FROM schedule
		WHERE perfNum2 = #{perfNum}
	</select>
	
	<!-- 출연진 -->
	<select id="listActor" parameterType="Integer" resultType="com.sp.tp.admin.performanceManage.PerformanceManage">
		SELECT actorNum, perfNum, name actorName, roleName, imageFileName actorFileName
		FROM actor
		WHERE perfNum = #{perfNum}
	</select>
	
	<!-- 공연 시간 -->
	<select id="listTime" parameterType="map" resultType="com.sp.tp.admin.performanceManage.PerformanceManage">
		SELECT performanceTime perfTime, LISTAGG(name,',') WITHIN GROUP(ORDER BY name) AS actorName
		FROM cast c, actor a, performanceTime pt
		WHERE a.actorNum = c.actorNum AND c.ptNum = pt.ptNum and pt.perf_Date = #{perfDate} and pt.perfNum2 = #{perfNum}
		GROUP BY performanceTime
	</select>
	
	<!-- 카테고리 -->
	<select id="listCategory" resultType="com.sp.tp.admin.performanceManage.PerformanceManage">
		SELECT cNum categoryNum, category
		FROM category
	</select>
	
	<select id="listGenre" parameterType="Integer" resultType="com.sp.tp.admin.performanceManage.PerformanceManage">
		SELECT gNum genreNum, genre
		FROM genre
		WHERE cNum = #{categoryNum}
	</select>
	
	<select id="listRate" parameterType="Integer" resultType="com.sp.tp.admin.performanceManage.PerformanceManage">
		SELECT rNum rateNum, rate
		FROM rate
	</select>
	
	<select id="listHall" resultType="com.sp.tp.admin.performanceManage.PerformanceManage">
		SELECT hNum hallNum, hallName
		FROM hall
	</select>
	
	<select id="listTheater" parameterType="Integer" resultType="com.sp.tp.admin.performanceManage.PerformanceManage">
		SELECT tNum theaterNum, Name theater
		FROM theater
		WHERE hallNo = #{hallNum}
	</select>
	
	<!-- 공연 수정 -->
	<update id="updatePerformance" parameterType="com.sp.tp.admin.performanceManage.PerformanceManage">
		UPDATE performance SET subject=#{subject}, content=#{content}, gmNum=#{gmNum}, tNum=#{tNum}, rNum=#{rNum}, 
			rating=#{rating}, price=#{price}, time=#{showTime}, startDate = #{startDate}, endDate = #{endDate}
		WHERE perfNum = #{perfNum}
	</update>

</mapper>